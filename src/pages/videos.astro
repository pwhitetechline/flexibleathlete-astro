---
import Layout from '../layouts/Layout.astro';
import { videos } from '../data/videos';

// Group videos by category
const videosByCategory = videos.reduce((acc, video) => {
    acc[video.category] = [...(acc[video.category] || []), video];
    return acc;
}, {} as Record<string, typeof videos>);

// Helper function to get YouTube embed URL
function getYouTubeEmbedUrl(url: string) {
    const videoId = url.split('v=')[1]?.split('&')[0];
    return `https://www.youtube.com/embed/${videoId}`;
}
---

<Layout title="Videos - Flexible Athlete">
    <main class="videos-container">
        <h1 class="page-title">Helpful Videos</h1>
        
        {Object.entries(videosByCategory).map(([category, categoryVideos]) => (
            <section class="category-section">
                <h2>{category}</h2>
                <div class="videos-grid">
                    {categoryVideos.map(video => (
                        <article class="video-card">
                            <div class="video-embed">
                                <iframe
                                    src={getYouTubeEmbedUrl(video.youtubeUrl)}
                                    title={video.title}
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                    allowfullscreen
                                ></iframe>
                            </div>
                            <div class="video-info">
                                <h3>{video.title}</h3>
                                <p>{video.description}</p>
                                <div class="video-meta">
                                    <span class="duration">Duration: {video.duration}</span>
                                </div>
                            </div>
                        </article>
                    ))}
                </div>
            </section>
        ))}
    </main>
</Layout>

<style>
    .videos-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .page-title {
        text-align: center;
        color: #333;
        margin-bottom: 3rem;
        font-size: 2.5rem;
    }

    .category-section {
        margin-bottom: 3rem;
    }

    .category-section h2 {
        color: #333;
        margin-bottom: 1.5rem;
        font-size: 1.8rem;
    }

    .videos-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 2rem;
    }

    .video-card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
    }

    .video-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 12px rgba(0,0,0,0.15);
    }

    .video-embed {
        position: relative;
        padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
        height: 0;
        overflow: hidden;
    }

    .video-embed iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: 0;
    }

    .video-info {
        padding: 1.5rem;
    }

    .video-info h3 {
        color: #333;
        margin-bottom: 0.75rem;
        font-size: 1.25rem;
        line-height: 1.4;
    }

    .video-info p {
        color: #666;
        font-size: 0.95rem;
        line-height: 1.6;
        margin-bottom: 1rem;
    }

    .video-meta {
        display: flex;
        align-items: center;
        gap: 1rem;
        font-size: 0.875rem;
        color: #666;
    }

    .duration {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
    }

    @media (max-width: 768px) {
        .videos-grid {
            grid-template-columns: 1fr;
        }

        .page-title {
            font-size: 2rem;
        }

        .category-section h2 {
            font-size: 1.5rem;
        }

        .video-info h3 {
            font-size: 1.2rem;
        }
    }
</style>
