---
import Layout from '../layouts/Layout.astro';
import { contactInfo } from '../data/contact';
---

<Layout title="Contact Us">
    <div class="contact-container fade-in">
        <h2>Let's Get You Moving</h2>
        <div class="contact-content">
            <div class="contact-info slide-in">
                <h3>Get in Touch</h3>
                <p>Have questions? We'd love to hear from you. Send us a message and we'll respond as soon as possible.</p>
                <div class="info-item">
                    <strong>Email:</strong>
                    <a href={`mailto:${contactInfo.email}`}>{contactInfo.email}</a>
                </div>
                <div class="info-item">
                    <strong>Phone:</strong>
                    <a href={`tel:${contactInfo.phone.replace(/\D/g, '')}`}>{contactInfo.phone}</a>
                </div>
                <div class="info-item">
                    <strong>Address:</strong>
                    <address>
                        {contactInfo.address.street} {contactInfo.address.suite}<br>
                        {contactInfo.address.city}, {contactInfo.address.state} {contactInfo.address.zip}
                    </address>
                </div>
                <div class="map-container">
                    <iframe
                        src={contactInfo.mapUrl}
                        width="100%"
                        height="450"
                        style="border:0;"
                        allowfullscreen=""
                        loading="lazy"
                        referrerpolicy="no-referrer-when-downgrade"
                    ></iframe>
                </div>
            </div>
            
            <form action="https://api.web3forms.com/submit" method="POST" class="contact-form slide-in">
                <input type="hidden" name="access_key" value="aa70939f-b7a0-47b8-84ba-7778d7dc2e5c">
                <input type="hidden" name="subject" value="New Contact Form Submission from Flexible Athlete">
                <input type="hidden" name="from_name" value="Flexible Athlete Website">
                <input type="checkbox" name="botcheck" class="hidden" style="display: none;">
                
                <div class="form-input">
                    <input type="text" id="name" name="name" required>
                    <label for="name">Your Name</label>
                    <span class="focus-border"></span>
                </div>
                
                <div class="form-input">
                    <input type="email" id="email" name="email" required>
                    <label for="email">Email Address</label>
                    <span class="focus-border"></span>
                </div>
                
                <div class="form-input">
                    <input type="text" id="message-subject" name="message-subject" required>
                    <label for="message-subject">Subject</label>
                    <span class="focus-border"></span>
                </div>
                
                <div class="form-input">
                    <textarea id="message" name="message" rows="5" required></textarea>
                    <label for="message">Your Message</label>
                    <span class="focus-border"></span>
                </div>

                <div id="result" class="result-message"></div>
                
                <button type="submit" class="submit-btn">
                    <span class="btn-text">Send Message</span>
                    <span class="btn-icon">â†’</span>
                </button>
            </form>
        </div>
    </div>
</Layout>

<style>
    .contact-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 4rem 2rem;
    }

    h2 {
        text-align: center;
        color: var(--color-text);
        margin-bottom: 3rem;
        font-size: 2.5rem;
        font-weight: 700;
        background: linear-gradient(120deg, var(--color-primary), #357abd);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .contact-content {
        display: grid;
        grid-template-columns: 1fr;
        gap: 4rem;
        margin-top: 2rem;
    }

    @media (min-width: 768px) {
        .contact-content {
            grid-template-columns: 1fr 1fr;
        }
    }

    .contact-info {
        background: white;
        padding: 2rem;
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    }

    .contact-info h3 {
        color: var(--color-text);
        margin-bottom: 1.5rem;
        font-size: 1.8rem;
    }

    .info-item {
        margin-bottom: 1.5rem;
    }

    .info-item a {
        color: var(--color-primary);
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .info-item a:hover {
        color: #357abd;
    }

    .map-container {
        margin-top: 2rem;
        border-radius: 12px;
        overflow: hidden;
    }

    .contact-form {
        background: white;
        padding: 2rem;
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    }

    .form-input {
        position: relative;
        margin-bottom: 2rem;
    }

    .form-input input,
    .form-input textarea {
        width: 100%;
        padding: 1rem;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        background: transparent;
        font-size: 1rem;
        transition: all 0.3s ease;
        outline: none;
    }

    .form-input textarea {
        min-height: 120px;
        resize: vertical;
    }

    .form-input label {
        position: absolute;
        left: 1rem;
        top: 1rem;
        padding: 0 0.25rem;
        color: #666;
        font-size: 1rem;
        transition: all 0.3s ease;
        pointer-events: none;
        background: white;
    }

    .form-input input:focus,
    .form-input textarea:focus {
        border-color: var(--color-primary);
        box-shadow: 0 0 0 2px rgba(65, 105, 225, 0.1);
    }

    .form-input input:focus + label,
    .form-input textarea:focus + label,
    .form-input input:not(:placeholder-shown) + label,
    .form-input textarea:not(:placeholder-shown) + label {
        top: -0.5rem;
        left: 0.8rem;
        font-size: 0.8rem;
        color: var(--color-primary);
    }

    .focus-border {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 0;
        height: 2px;
        background: var(--color-primary);
        transition: width 0.3s ease;
    }

    .form-input input:focus ~ .focus-border,
    .form-input textarea:focus ~ .focus-border {
        width: 100%;
    }

    .submit-btn {
        width: 100%;
        padding: 1rem 2rem;
        background: var(--color-primary);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .submit-btn:hover {
        background: #357abd;
        transform: translateY(-2px);
    }

    .btn-icon {
        transition: transform 0.3s ease;
    }

    .submit-btn:hover .btn-icon {
        transform: translateX(4px);
    }

    .result-message {
        margin-top: 1rem;
        padding: 1rem;
        border-radius: 8px;
        text-align: center;
        font-weight: 500;
    }

    .result-message.success {
        background: #e6ffe6;
        color: #006600;
    }

    .result-message.error {
        background: #ffe6e6;
        color: #660000;
    }

    @media (max-width: 768px) {
        .contact-container {
            padding: 2rem 1rem;
        }

        h2 {
            font-size: 2rem;
        }

        .contact-form {
            padding: 1.5rem;
        }
    }
</style>

<script>
    // Form validation and submission handling
    const form = document.querySelector('.contact-form');
    if (form instanceof HTMLFormElement) {
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            // Show loading state
            const submitBtn = form.querySelector('.submit-btn');
            if (submitBtn instanceof HTMLButtonElement) {
                const btnText = submitBtn.querySelector('.btn-text');
                if (btnText) {
                    const originalText = btnText.textContent;
                    btnText.textContent = 'Sending...';
                    submitBtn.disabled = true;

                    try {
                        const response = await fetch(form.action, {
                            method: 'POST',
                            body: new FormData(form)
                        });

                        const data = await response.json();

                        if (data.success) {
                            const resultDiv = document.getElementById('result');
                            if (resultDiv) {
                                resultDiv.textContent = 'Message sent successfully!';
                                resultDiv.className = 'result-message success';
                                form.reset();
                            }
                        } else {
                            throw new Error('Something went wrong');
                        }
                    } catch (error) {
                        const resultDiv = document.getElementById('result');
                        if (resultDiv) {
                            resultDiv.textContent = 'Failed to send message. Please try again.';
                            resultDiv.className = 'result-message error';
                        }
                    } finally {
                        // Restore button state
                        btnText.textContent = originalText;
                        submitBtn.disabled = false;
                    }
                }
            }
        });

        // Add shake animation to invalid fields on form submission attempt
        form.addEventListener('invalid', (e) => {
            if (e.target) {
                (e.target as HTMLElement).classList.add('shake');
            }
            setTimeout(() => {
                if (e.target) {
                    (e.target as HTMLElement).classList.remove('shake');
                }
            }, 1000);
        }, true);
    }
</script>
